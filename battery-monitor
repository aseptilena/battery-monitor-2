#!/bin/sh

# battery-monitor v7.0
# Bruno "GNUser" Dantas GPLv3

# user variables:
sys_dir=/sys/class/power_supply/BAT0
proc_dir=/proc/acpi/battery/BAT0
sound_file=/opt/scripts/media/battery-alarm.wav
icon_dir=/opt/scripts/media

main()
{
	mktrayicon $pipe &

	while true; do 
		calculate
		echo "i $icon_dir/$icon" >$pipe
		printf "t '${remaining_percent}%%\n${remaining_time}'\n" >$pipe
		sound_alarm_if_needed
		sleep 10 & wait $! # put sleep in background so that script can catch signals during sleep
	done
}

calculate()
{
	remaining_percent="$(cat $sys_dir/capacity)"

	rate=$(cat $proc_dir/state | grep 'present rate' | egrep -o '[0-9]+') # e.g., 13000 (mW)
	capacity=$(cat $proc_dir/state | grep 'remaining capacity' | egrep -o '[0-9]+') # e.g., 26217 (mWh)
	minutes_remaining=$(awk -v rate=$rate -v capacity=$capacity 'BEGIN {printf "%.0f", capacity/rate*60}') # e.g., 121
	hours=$(( minutes_remaining / 60 )) # e.g., 2
	minutes=$(( minutes_remaining % 60 )); minutes=$(printf '%02d' $minutes) # e.g., 01
	remaining_time="${hours}:${minutes}" # e.g., 2:01

	if cat $sys_dir/status | egrep -q 'Charging|Unknown|Full'; then
		suffix="-charging"
		remaining_time="a/c"
	else
		suffix=""
	fi

	if [ "$remaining_percent" -ge 80 ]; then
		icon="battery-full${suffix}.png"
	elif [ "$remaining_percent" -ge 20 ]; then
		icon="battery-good${suffix}.png"
	elif [ "$remaining_percent" -ge 10 ]; then
		icon="battery-low${suffix}.png"
	else
		icon="battery-caution${suffix}.png"
	fi
}

sound_alarm_if_needed()
{
	[ -z "$memory" ] && memory="--"

	[ "$remaining_percent" -ge 10 ] && status=g || status=b # g for good, b for bad
	memory="${memory}${status}" # append current status to memory
	memory=$(echo $memory | grep -o '..$') # keep only last two characters of memory
	[ "$memory" = "gb" ] && aplay $sound_file
}

die()
{
	echo "q" >$pipe
	rm $pipe
	exit
}
trap die INT HUP TERM

# internal variables:
pipe=/tmp/$(basename $0)-pipe; mkfifo $pipe

main
